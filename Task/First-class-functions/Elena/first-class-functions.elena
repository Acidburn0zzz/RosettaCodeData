import system'routines;
import system'math;
import extensions'routines;

extension op
{
    compose(f,g)
        = mixin f(mixin g(self).eval()).eval();
}

public program()
{
   var fs := new object[]{
                mssgconst sin<mathOp>[0],
                mssgconst cos<mathOp>[0],
                new:{ eval() { ^ __target.power:3.0r } }};

   var gs := new object[]{
                mssgconst arcsin<mathOp>[0],
                mssgconst arccos<mathOp>[0],
                new:{ eval(){ ^ __target.power(1.0r / 3) } }};

   fs.zipBy(gs, (f,g => 0.5r.compose(f,g)))
     .forEach:printingLn
}
