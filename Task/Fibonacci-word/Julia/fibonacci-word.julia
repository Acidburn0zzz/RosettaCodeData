# Code for "entropy" taken from https://rosettacode.org/wiki/Entropy#Julia
entropy(s::String)::Float32 = -sum(x -> x * log(2, x), [count(x -> x == c, s) / length(s) for c in unique(s)])

function fibboword(n::Int64)::Array{String}
  # Initialize the result
  r = Array{String}(n)
  # First element
  r[1] = "0"
  # If more than 2, set the second element
  if (n â‰¥ 2)
    r[2] = "1"
  end
  # Recursively create elements > 3
  for i in 3:n
    r[i] = r[i - 1] * r[i - 2]
  end
  return r
end

function testfibbo(n::Int64)
  fib = fibboword(n)
  for i in 1:length(fib)
    println(i, "\t", length(fib[i]), "\t", entropy(fib[i]))
  end
  return 0
end
